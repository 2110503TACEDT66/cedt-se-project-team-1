{
	"info": {
		"_postman_id": "ca443647-7020-4491-883c-a58ff605f1b8",
		"name": "Massage Reservation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14039631"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\",pm.response.json().token)\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Get Me\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFirstName}}\",\r\n    \"telephone\": \"0999999999\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\":\"12345678\",\r\n    \"role\": \"user\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\",pm.response.json().token)\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"role\", \"user\");\r",
									"\r",
									"postman.setNextRequest(\"Get All Massages\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\" : \"{{user_email}}\",\r\n    \"password\" : \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Me",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"const new_user_id = response.data._id;\r",
									"const new_user_email = response.data.email;\r",
									"\r",
									"pm.environment.set(\"user_id\", new_user_id);\r",
									"pm.environment.set(\"user_email\", new_user_email);\r",
									"\r",
									"postman.setNextRequest(\"User Login\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/v1/auth/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", null)\r",
									"pm.environment.set(\"role\", null);\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Admin Login\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/logout",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\",pm.response.json().token)\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"role\", \"admin\");\r",
									"\r",
									"postman.setNextRequest(\"Add ONE Reservation\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\" : \"admin1@gmail.com\",\r\n    \"password\" : \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Massages",
			"item": [
				{
					"name": "Get All Massages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Add ONE Reservation\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/massages?select=name,province,postalcode&sort=name",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"massages"
							],
							"query": [
								{
									"key": "select",
									"value": "name,province,postalcode"
								},
								{
									"key": "sort",
									"value": "name"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Massage",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/massages/65e422b71f799659f5b7a9aa",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"massages",
								"65e422b71f799659f5b7a9aa"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create New Massage",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ร้านน้องโอ๊ค2\",\r\n    \"address\" : \"Changwattana Pakkret\",\r\n    \"district\": \"Pakkret\",\r\n    \"province\": \"Nonthaburi\",\r\n    \"postalcode\" : \"10110\",\r\n    \"tel\": \"02-8369999\",\r\n    \"region\": \"กรุงเทพมหานคร (Bangkok)\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/massages/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"massages",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Single Massage",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"ร้านน้องโอ๊ค2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/massages/65e422b71f799659f5b7a9aa",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"massages",
								"65e422b71f799659f5b7a9aa"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Single Massage",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/massages/65e422b71f799659f5b7a9aa",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"massages",
								"65e422b71f799659f5b7a9aa"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reservations",
			"item": [
				{
					"name": "Get All Reservations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"if (pm.environment.get(\"role\") === \"admin\") {\r",
									"    pm.test(\"Count field must be more than zero\", function () {\r",
									"        const responseData = pm.response.json();\r",
									"        pm.expect(responseData.count).to.above(0);\r",
									"    });\r",
									"} else {\r",
									"    pm.test(\"Count field must be one\", function () {\r",
									"        const responseData = pm.response.json();\r",
									"        pm.expect(responseData.count).to.equal(1);\r",
									"    });\r",
									"}\r",
									"\r",
									"postman.setNextRequest(\"Update Reservation\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/reservations",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reservations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Reservation for Massage",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/massages/65e4241e1f799659f5b7a9e4/reservations",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"massages",
								"65e4241e1f799659f5b7a9e4",
								"reservations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get One Reservation",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/reservations/65e423781f799659f5b7a9ca",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								"65e423781f799659f5b7a9ca"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add ONE Reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"const new_reservation_id = response.data._id;\r",
									"pm.environment.set(\"reservation_id\", new_reservation_id);\r",
									"\r",
									"if (pm.environment.get(\"role\") === \"admin\") {\r",
									"    postman.setNextRequest(\"Get All Reservations\");\r",
									"} else {\r",
									"    pm.test(\"Response status code is 200\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"    });\r",
									"    postman.setNextRequest(\"Add ONE Reservation Incorrect Form\");\r",
									"} \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"apptDate\" : \"2021-02-27T15:59:54.424Z\",\r\n    \"user\" : \"{{user_id}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/massages/:massageID/reservations/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"massages",
								":massageID",
								"reservations",
								""
							],
							"variable": [
								{
									"key": "massageID",
									"value": "65e423551f799659f5b7a9c0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Delete ONE Reservation\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"massage\" : \"65e423551f799659f5b7a9c0\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/reservations/{{reservation_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								"{{reservation_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete ONE Reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"if (pm.environment.get(\"role\") === \"admin\") postman.setNextRequest(null);",
									"else postman.setNextRequest(\"Logout\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/reservations/{{reservation_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reservations",
								"{{reservation_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add ONE Reservation Incorrect Form",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Get All Reservations\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user\" : \"{{user_id}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/massages/:massageID/reservations/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"massages",
								":massageID",
								"reservations",
								""
							],
							"variable": [
								{
									"key": "massageID",
									"value": "65e423551f799659f5b7a9c0"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Slip",
			"item": [
				{
					"name": "Get All Slips",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/slips/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"slips",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Slip",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/slips/:slipId",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"slips",
								":slipId"
							],
							"variable": [
								{
									"key": "slipId",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create New Slip",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reservation\": \"65e428b029600e96fbeea829\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/slips/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"slips",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Single Slip",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/slips/:slipId",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"slips",
								":slipId"
							],
							"variable": [
								{
									"key": "slipId",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Single Slip",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/slips/:slipId",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"slips",
								":slipId"
							],
							"variable": [
								{
									"key": "slipId",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Uploading Slip",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "slipPhoto",
									"type": "file",
									"src": "/D:/CEDT/1_semester_2/SWParactice/presentation-day-1-get-a-good-rest-api/image/slips/slip1.jpg"
								},
								{
									"key": "test",
									"value": "Hello",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{URL}}/api/v1/slips/:reservationId/photo",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"slips",
								":reservationId",
								"photo"
							],
							"variable": [
								{
									"key": "reservationId",
									"value": "65e58dc30a9a2f6909dd8c55"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URL",
			"value": "localhost:5000",
			"type": "string"
		}
	]
}